@page "/requisition"
@using AnimationEffect = Syncfusion.Blazor.AnimationEffect
@layout ProfSvcLayout
@inject IJSRuntime Runtime;

<Header></Header>

<div class="gridHolder">
    <div class="divGridToolBar">
        <div style="display: flex">
            <div style="flex: 1; text-align: left">
                <div style="display: flex; height: 25px; margin-top: 12px">
                    <div style="display: flex; width: 350px;">
                        <SfButton CssClass="buttonFirst" @onclick="FirstClick"></SfButton>
                        <SfButton CssClass="buttonPrevious" @onclick="PreviousClick"></SfButton>
                        <SfNumericTextBox @bind-Value="_currentPage" CssClass="pageNumeric" Decimals="0" EnablePersistence="false" Format="n0" Height="22px" ID="numericPage" Max="@PageCount"
                                          Min="1" @onchange="PageNumberChanged" ShowSpinButton="false" TValue="int" Width="40px">
                        </SfNumericTextBox>
                        <div style="font-weight: bold; margin-left: 10px; margin-top: 3px; padding-right: 0; width: 10px;">of</div>
                        <div style="font-weight: bold; margin-left: 10px; margin-top: 3px; padding-right: 10px; text-align: center; width: auto;">@PageCount</div>
                        <SfButton CssClass="buttonNext" @onclick="NextClick"></SfButton>
                        <SfButton CssClass="buttonLast" @onclick="LastClick"></SfButton>
                    </div>
                    <div style="font-weight: bold; margin-left: 120px; margin-top: 4px; padding-right: 0; width: 50px;">Show: </div>
                    <SfDropDownList @bind-Value="@SearchModel.ItemCount" CssClass="dropItem" DataSource="_showRecords" ID="dropItemCount" TItem="IntValues" TValue="int" Width="100px">
                        <DropDownListFieldSettings Text="Value" Value="Key" />
                        <DropDownListEvents TItem="IntValues" TValue="int" ValueChange="ChangeItemCount" />
                    </SfDropDownList>
                </div>
            </div>
            <div class="divRightControls" style="width: 720px">
                <SfButton Content="Refresh" CssClass="topToolButton" IconCss="refreshButton" @onclick="RefreshGrid"></SfButton>
                <SfButton CssClass="topToolButton" IconCss="newButton" @onclick="() => EditRequisition(true)">Add Requisition</SfButton>
                <SfButton CssClass="topToolButton" IconCss="searchButton" @onclick="AdvancedSearch">Advanced Search</SfButton>
                <AutoCompleteButton EnablePersistence="true" ID="autoRequisition" PlaceholderText="Select a Requisition" @ref="AutoCompleteControl" Ref="AutoCompleteControl"
                                    TypeInstance="@typeof(AdminRequisitionDropDownAdaptor)" ValueChange="FilterGrid" />
            </div>
        </div>
    </div>
    <SfGrid AllowMultiSorting="false" AllowPaging="false" AllowSorting="true" EnableHeaderFocus="true" EnableStickyHeader="true" EnableHover="true" Height="100%" @ref="Grid" TValue="Requisitions" Width="99.75%">
        <GridSelectionSettings EnableToggle="false" Mode="SelectionMode.Row" Type="SelectionType.Single" />
        <SfDataManager Adaptor="Adaptors.CustomAdaptor" AdaptorInstance="@typeof(AdminRequisitionAdaptor)" Key="ID" />
        <GridEvents DataBound="DataHandler" DetailDataBound="DetailDataBind" OnActionBegin="OnActionBegin" OnActionComplete="OnActionComplete" TValue="Requisitions" />@* *@
        <GridSortSettings AllowUnsort="false">
            <GridSortColumns>
                <GridSortColumn Direction="@SortDirectionProperty" Field="@SortField"></GridSortColumn>
            </GridSortColumns>
        </GridSortSettings>
        <GridColumns>
            <GridColumn Field="@nameof(Requisitions.ID)" HeaderText="ID" IsPrimaryKey="true" Visible="false" Width="0" />
            <GridColumn AllowSorting="true" HeaderText="Code" Width="12%">
                <Template Context="aCon">
                    @{
                        if (aCon is Requisitions _con)
                        {
                            <span style="color: @(_con.PriorityColor)">@_con.Code</span>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn AllowSorting="true" Field="@nameof(Requisitions.Title)" HeaderText="Title" Width="24%">
                <Template Context="aCon">
                    @{
                        if (aCon is Requisitions _con)
                        {
                            <span style="color: @(_con.PriorityColor)">@_con.Title</span>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn AllowSorting="false" Field="@nameof(Requisitions.Company)" HeaderText="Company" Width="18%">
                <Template Context="aCon">
                    @{
                        if (aCon is Requisitions _con)
                        {
                            <span style="color: @(_con.PriorityColor)">@_con.Company</span>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn AllowSorting="false" Field="@nameof(Requisitions.JobOptions)" HeaderText="Type" Width="22%">
                <Template Context="aCon">
                    @{
                        if (aCon is Requisitions _con)
                        {
                            <span style="color: @(_con.PriorityColor)">@_con.JobOptions</span>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn AllowSorting="true" Field="@nameof(Requisitions.Updated)" HeaderText="Updated" Width="12%">
                <Template Context="aCon">
                    @{
                        if (aCon is Requisitions _con)
                        {
                            <span style="color: @(_con.PriorityColor)">@_con.Updated</span>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn AllowSorting="true" Field="@nameof(Requisitions.Status)" HeaderText="Status" Width="12%">
                <Template Context="aCon">
                    @{
                        if (aCon is Requisitions _con)
                        {
                            <span style="color: @(_con.PriorityColor)">@_con.Status</span>
                        }
                    }
                </Template>
            </GridColumn>
        </GridColumns>
        <GridTemplates Context="context">
            <DetailTemplate>
                @{
                    //Candidates _candidates = context! as Candidates;
                }
                @* Add Buttons Start *@
				<SfButton Content="Edit Requisition" CssClass="topToolButton tabButtonAdd" IconCss="addButton" @onclick="() => EditRequisition(false)" style="@("display:" + (_selectedTab == 0 ? "unset" : "none"))"/>
                @*<SfButton Content="Add Education" CssClass="topToolButton tabButtonAdd" IconCss="addButton" @onclick="() => EditEducation(0)" style="@("display:" + (_selectedTab == 2 ? "unset" : "none"))"></SfButton>
                <SfButton Content="Add Experience" CssClass="topToolButton tabButtonAdd" IconCss="addButton" @onclick="() => EditExperience(0)" style="@("display:" + (_selectedTab == 3 ? "unset" : "none"))"></SfButton>
                <SfButton Content="Add Note" CssClass="topToolButton tabButtonAdd" IconCss="addButton" @onclick="() => EditNotes(0)" style="@("display:" + (_selectedTab == 4 ? "unset" : "none"))"></SfButton>*@
				<SfButton Content="Add Document" CssClass="topToolButton tabButtonAdd" IconCss="addButton" @onclick="AddDocument" style="@("display:" + (_selectedTab == 1 ? "unset" : "none"))"/>
                <SfTab CssClass="e-fill" Height="520" ID="tabCandidates" LoadOn="ContentLoad.Init" SelectedItem="_selectedTab" ShowCloseButton="false" Width="95%">
                    <TabAnimationSettings>
                        <TabAnimationPrevious Effect="AnimationEffect.None"></TabAnimationPrevious>
                        <TabAnimationNext Effect="AnimationEffect.None"></TabAnimationNext>
                        <TabEvents Selected="TabSelected"></TabEvents>
                    </TabAnimationSettings>
                    <TabItems>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="Requisition Info" />
                            </ChildContent>
							<ContentTemplate>
								<BasicInfoRequisitionPanel ModelObject="_requisitionDetailsObject" States="_states" SkillsText="_requisitionDetailSkills" />
							</ContentTemplate>
                        </TabItem>
						<TabItem>
							<ChildContent>
								<TabHeader Text="Documents" />
							</ChildContent>
							<ContentTemplate>
								<DocumentsPanel DeleteDocument="DeleteDocument" DownloadDocument="DownloadDocument" ModelObject="@_requisitionDocumentsObject" @ref="DocumentsPanel" RowHeight="@RowHeight" />
							</ContentTemplate>
						</TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="Candidate Activity" />
                            </ChildContent>
                            <ContentTemplate>
                                <ActivityPanelRequisition EditActivity="EditActivity" ModelActivityObject="_candidateActivityObject" @ref="ActivityPanel" RowHeight="@RowHeight" UndoCandidateActivity="UndoActivity" />
                            </ContentTemplate>
                        </TabItem>
                    </TabItems>
                    <SfSpinner CssClass="spinnerHeight" @ref="@Spinner" Type="SpinnerType.Fabric" ZIndex="12000" />
                </SfTab>
            </DetailTemplate>
        </GridTemplates>
    </SfGrid>

	<SfSpinner CssClass="spinnerHeight" @ref="@SpinnerTop" Type="SpinnerType.Fabric" ZIndex="12000" />

	<RequisitionDetailsPanel Companies="Companies" CompanyContacts="CompanyContacts" Education="_education" Eligibility="_eligibility" Experience="_experience" JobOptions="_jobOptions" Recruiters="_recruiters"
							 ModelObject="_requisitionDetailsObjectClone" @ref="DialogEditRequisition" States="_states" Title="@Title" Skills="Skills" SaveRequisitionDialog="SaveRequisition" />

	<AddRequisitionDocument AfterUpload="AfterDocument" BeforeUpload="BeforeDocument" ModelDocumentObject="SelectedDownload" OnFileUpload="UploadDocument" @ref="DialogDocument" Save="SaveDocument" />

	<EditActivityDialog ModelObject="SelectedActivity" ModelSteps="NextSteps" @ref="DialogActivity" Save="SaveActivity" Status="_workflows" IsCandidate="false" />
    
    <AdvancedRequisitionSearch ModelSearchObject="SearchModel" @ref="DialogSearch" JobOption="_jobOptions" StatusDropDown="_statusSearch" Companies="_companies" Search="RequisitionAdvancedSearch"></AdvancedRequisitionSearch>

	<div class="divGridFooter">
        <div style="display: flex">
            <div style="flex: 1; padding-left: 15px; text-align: left;">
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("A")'>A</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("B")'>B</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("C")'>C</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("D")'>D</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("E")'>E</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("F")'>F</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("G")'>G</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("H")'>H</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("I")'>I</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("J")'>J</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("K")'>K</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("L")'>L</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("M")'>M</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("N")'>N</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("O")'>O</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("P")'>P</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("Q")'>Q</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("R")'>R</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("S")'>S</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("T")'>T</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("U")'>U</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("V")'>V</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("W")'>W</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("X")'>X</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("Y")'>Y</SfButton>
                <SfButton CssClass="buttonAlphabet" @onclick='() => SetAlphabet("Z")'>Z</SfButton>
                <SfButton CssClass="buttonAlphabetClear" @onclick="AllAlphabet" style="width: 30px">All</SfButton>
                <SfButton CssClass="buttonAlphabetClear" @onclick="ClearFilter">Clear</SfButton>
            </div>
            <div style="width: 520px">
                Items
                <b>@StartRecord</b> to
                <b>@EndRecord</b> of
                <b>@Count</b> rows
            </div>
        </div>
    </div>
</div>